{"version":3,"sources":["api/users.ts","services/getUserById.ts","components/TodoForm/TodoForm.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/initialTodos.ts","api/todos.ts","services/getNewTodoId.ts","App.tsx","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoForm","onSubmit","useState","title","setTitle","setUserId","hasErrorTitle","setHasErrorTitle","hasErrorUser","setHasErrorUser","action","method","event","preventDefault","trimEnd","completed","className","type","value","placeholder","onChange","target","trimStart","cn","error","disabled","map","UserInfo","href","TodoInfo","todo","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0930b17b.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/user';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n","import cn from 'classnames';\nimport { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/todo';\nimport { getUserById } from '../../services/getUserById';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [hasErrorTitle, setHasErrorTitle] = useState(false);\n  const [hasErrorUser, setHasErrorUser] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trimStart());\n    setHasErrorTitle(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasErrorUser(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasErrorTitle(!title);\n    setHasErrorUser(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title: title.trimEnd(),\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          placeholder=\"Enter a title\"\n          onChange={handleTitle}\n        />\n        {hasErrorTitle && (\n          <span className={cn({ error: hasErrorTitle })}>\n            Please enter a title\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {usersFromServer.map(user => {\n            return (\n              <option\n                value={`${user.id}`}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            );\n          })}\n        </select>\n\n        {hasErrorUser && (\n          <span className={cn({ error: hasErrorUser })}>\n            Please choose a user\n          </span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={`${id}`}\n      className={\n        cn('TodoInfo', { 'TodoInfo--completed': completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user ? <UserInfo user={user} /> : user}\n    </article>\n  );\n};\n","import { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import todosFromServer from '../api/todos';\nimport { Todo } from '../types/todo';\nimport { getUserById } from './getUserById';\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../types/todo';\n\nexport function getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\nimport { initialTodos } from './services/initialTodos';\nimport { getNewTodoId } from './services/getNewTodoId';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}